{"ast":null,"code":"var _jsxFileName = \"C:\\\\projetos\\\\recogency\\\\frontend\\\\src\\\\components\\\\pages\\\\Cadastro\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\n\nclass Cadastro extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      model: {\n        id: 0,\n        nome: '',\n        origem: '',\n        destino: '',\n        saida: '',\n        retorno: '',\n        preco: 0\n      }\n    };\n\n    this.setValues = (e, field) => {\n      const {\n        model\n      } = this.state;\n      model[field] = e.target.value;\n      this.setState({\n        model\n      });\n      console.log(this.state.model);\n    };\n\n    this.create = e => {\n      this.setState({\n        model: {\n          id: 0,\n          nome: '',\n          origem: '',\n          destino: '',\n          saida: '',\n          retorno: '',\n          preco: 0\n        }\n      });\n      this.props.clienteCreate(this.state.model);\n    };\n  }\n\n  componentWillMount() {\n    PubSub.subscribe('edit-cliente', (topic, cliente) => {\n      this.setState({\n        model: cliente\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"primary-color display-6 text-center fw-bold my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Cadastro\"), /*#__PURE__*/React.createElement(\"main\", {\n      class: \"main-pags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"contForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Nome: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"nome\",\n      value: this.state.model.nome,\n      onChange: e => this.setValues(e, 'nome'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Destino: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"destino\",\n      value: this.state.model.destino,\n      onChange: e => this.setValues(e, 'destino'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Origem: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"origem\",\n      value: this.state.model.origem,\n      onChange: e => this.setValues(e, 'rigem'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Sa\\xEDda: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"nome\",\n      value: this.state.model.saida,\n      onChange: e => this.setValues(e, 'saida'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Retorno: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"retorno\",\n      value: this.state.model.retorno,\n      onChange: e => this.setValues(e, 'retorno'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Pre\\xE7o: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"input\",\n      type: \"preco\",\n      value: this.state.model.preco,\n      onChange: e => this.setValues(e, 'preco'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Gravar\"))));\n  }\n\n}\n\nclass ListCliente extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.delete = id => {\n      this.props.deleteCliente(id);\n    };\n\n    this.onEdit = cliente => {\n      PubSub.publish('edit-cliente', cliente);\n    };\n  }\n\n  render() {\n    const {\n      clientes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Lista de clientes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"fl-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Destino\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Origem\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Saida\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Retorno\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Pre\\xE7o\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, clientes.map(cliente => /*#__PURE__*/React.createElement(\"tr\", {\n      key: cliente.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, cliente.nome), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, cliente.destino), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, cliente.origem), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, cliente.saida), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, cliente.retorno), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, `R$ ${cliente.preco}`), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info text-white\",\n      onClick: e => this.onEdit(cliente),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-pencil-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger ms-2\",\n      onClick: e => this.delete(cliente.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-trash3-fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    })))))))));\n  }\n\n}\n\nexport default class ProductBox extends Component {\n  constructor() {\n    super(...arguments);\n    this.Url = 'http://localhost:8080/cliente';\n    this.state = {\n      clientes: []\n    };\n\n    this.create = cliente => {\n      let data = {\n        id: parseInt(cliente.id),\n        nome: cliente.nome,\n        origem: cliente.origem,\n        valor: parseFloat(cliente.valor),\n        nome: '',\n        origem: '',\n        destino: '',\n        saida: '',\n        retorno: '',\n        preco: 0\n      };\n      const requestInfo = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: new Headers({\n          'Content-type': 'application/json'\n        })\n      };\n\n      if (data.valor !== 0 && data.cidade !== '' && data.pais !== '') {\n        fetch('http://localhost:8080/cliente/salvar', requestInfo).then(response => response.json()).then(newCliente => console.log(newCliente)).catch(e => console.log(e));\n      } else {\n        alert('Favor informar todos os campos!');\n        return;\n      }\n    };\n\n    this.delete = id => {\n      fetch(`http://localhost:8080/cliente/deletar/${id}`, {\n        method: 'DELETE'\n      }).then(rows => {\n        const clientes = this.state.clientes.filter(cliente => cliente.id !== id);\n        this.setState({\n          clientes\n        });\n      }).catch(e => console.log(e));\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.Url).then(response => response.json()).then(clientes => this.setState({\n      clientes\n    })).catch(e => console.log(e));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row destinos-action-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormDestino, {\n      destinoCreate: this.create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListCliente, {\n      clientes: this.state.clientes,\n      deleteCliente: this.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n/*class Cadastro extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            nome: '',\r\n            origem: '',\r\n            destino: '',\r\n            saida: '',\r\n            retorno: '',\r\n            preco: ''\r\n        }\r\n        this.changeNomeHandler = this.changeNomeHandler.bind(this);\r\n        this.changeOrigemHandler = this.changeOrigemHandler.bind(this);\r\n        this.changeDestinoHandler = this.changeDestinoHandler.bind(this);\r\n        this.changeSaidaHandler = this.changeSaidaHandler.bind(this);\r\n        this.changeRetornoHandler = this.changeRetornoHandler.bind(this);\r\n        this.changePrecoHandler = this.changePrecoHandler.bind(this);\r\n        this.saveOrUpdateCliente = this.saveOrUpdateCliente.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            ClienteService.getClienteById(this.state.id).then( (res) =>{\r\n                let cliente = res.data;\r\n                this.setState({\r\n                    nome: cliente.nome,\r\n                    origem: cliente.origem,\r\n                    destino: cliente.destino,\r\n                    saida: cliente.saida,\r\n                    retorno: cliente.retorno,\r\n                    preco: cliente.preco\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateCliente = (e) => {\r\n        e.preventDefault();\r\n        let cliente = {nome: this.state.nome, origem: this.state.origem, destino: this.state.destino, saida: this.state.saida, retorno: this.state.retorno, preco: this.state.preco};\r\n        console.log('cliente => ' + JSON.stringify(cliente));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            ClienteService.createCliente(cliente).then(res =>{\r\n                this.props.history.push('/clientes');\r\n            });\r\n        }else{\r\n            ClienteService.updateCliente(cliente, this.state.id).then( res => {\r\n                this.props.history.push('/clientes');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeNomeHandler= (event) => {\r\n        this.setState({nome: event.target.value});\r\n    }\r\n\r\n    changeCpfHandler= (event) => {\r\n        this.setState({cpf: event.target.value});\r\n    }\r\n\r\n    changeTelefoneHandler= (event) => {\r\n        this.setState({telefone: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/clientes');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center primary-color\">Adicionar</h3>\r\n        }else{\r\n            return <h3 className=\"text-center primary-color\">Editar</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='alturaTela'>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n\r\n                                            <label>Nome: </label><br />\r\n                                            <input class=\"input\" type=\"nome\" value={this.state.nome} onChange={this.changeNomeHandler} /><br />\r\n\r\n                                            <label>Origem: </label><br />\r\n                                            <input class=\"input\" type=\"origem\" value={this.state.origem} onChange={this.changeOrigemHandler} /><br />\r\n\r\n                                            <label>Destino: </label><br />\r\n                                            <input class=\"input texto\" type=\"destino\" value={this.state.destino} onChange={this.changeDestinoHandler} /><br />\r\n\r\n                                            <label>Saída: </label><br />\r\n                                            <input class=\"input\" type=\"saida\" value={this.state.saida} onChange={this.changeSaidaHandler} /><br />\r\n\r\n                                            <label>Retorno: </label><br />\r\n                                            <input class=\"input\" type=\"retorno\" value={this.state.retorno} onChange={this.changeRetornoHandler} /><br />\r\n\r\n                                            <label>Preço: </label><br />\r\n                                            <input class=\"input\" type=\"preco\" value={this.state.preco} onChange={this.changePrecoHandler} /><br />\r\n\r\n                                        <button className=\"btn btn-primary my-3\" onClick={this.saveOrUpdateCliente}>Salvar</button>\r\n                                        <button className=\"btn btn-danger my-3\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Voltar</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NovaPessoa*/\n\n/*\r\nexport default function Cadastro() {\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"mform\">\r\n        <h1 className=\"primary-color display-6 text-center fw-bold my-5\">Cadastro</h1>\r\n        <main class=\"main-pags\">\r\n            <form id=\"contForm\">\r\n                \r\n                    <label>Nome: </label><br />\r\n                    <input class=\"input\" type=\"nome\" /><br />\r\n\r\n                    <label>Origem: </label><br />\r\n                    <input class=\"input\" type=\"origem\" /><br />\r\n\r\n                    <label>Destino: </label><br />\r\n                    <input class=\"input texto\" type=\"destino\" /><br />\r\n\r\n                    <label>Saída: </label><br />\r\n                    <input class=\"input\" type=\"saida\" /><br />\r\n\r\n                    <label>Retorno: </label><br />\r\n                    <input class=\"input\" type=\"retorno\" /><br />\r\n\r\n                    <label>Preço: </label><br />\r\n                    <input class=\"input\" type=\"preco\" /><br />\r\n            \r\n                        <input id=\"btn-enviar\" type=\"submit\" value=\"Enviar\" />\r\n\r\n                    </form>\r\n                    </main>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n*/","map":{"version":3,"sources":["C:/projetos/recogency/frontend/src/components/pages/Cadastro/index.jsx"],"names":["React","Component","Cadastro","state","model","id","nome","origem","destino","saida","retorno","preco","setValues","e","field","target","value","setState","console","log","create","props","clienteCreate","componentWillMount","PubSub","subscribe","topic","cliente","render","ListCliente","delete","deleteCliente","onEdit","publish","clientes","map","ProductBox","Url","data","parseInt","valor","parseFloat","requestInfo","method","body","JSON","stringify","headers","Headers","cidade","pais","fetch","then","response","json","newCliente","catch","alert","rows","filter","componentDidMount"],"mappings":"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":["import React, { Component } from 'react'\r\nimport './style.css'\r\nclass Cadastro extends Component {\r\n  state = {\r\n    model: {\r\n      id: 0,\r\n      nome: '',\r\n      origem: '',\r\n      destino: '',\r\n      saida: '',\r\n      retorno: '',\r\n      preco: 0,\r\n    },\r\n  }\r\n\r\n  setValues = (e, field) => {\r\n    const { model } = this.state\r\n    model[field] = e.target.value\r\n    this.setState({ model })\r\n    console.log(this.state.model)\r\n  }\r\n\r\n  create = (e) => {\r\n    this.setState({\r\n      model: {\r\n        id: 0,\r\n        nome: '',\r\n        origem: '',\r\n        destino: '',\r\n        saida: '',\r\n        retorno: '',\r\n        preco: 0,\r\n      },\r\n    })\r\n    this.props.clienteCreate(this.state.model)\r\n  }\r\n\r\n  componentWillMount() {\r\n    PubSub.subscribe('edit-cliente', (topic, cliente) => {\r\n      this.setState({ model: cliente })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mform\">\r\n        <h1 className=\"primary-color display-6 text-center fw-bold my-5\">\r\n          Cadastro\r\n        </h1>\r\n        <main class=\"main-pags\">\r\n          <form id=\"contForm\">\r\n            <label>Nome: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"nome\"\r\n              value={this.state.model.nome}\r\n              onChange={(e) => this.setValues(e, 'nome')}\r\n            />\r\n            <br />\r\n\r\n            <label>Destino: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"destino\"\r\n              value={this.state.model.destino}\r\n              onChange={(e) => this.setValues(e, 'destino')}\r\n            />\r\n            <br />\r\n\r\n            <label>Origem: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"origem\"\r\n              value={this.state.model.origem}\r\n              onChange={(e) => this.setValues(e, 'rigem')}\r\n            />\r\n            <br />\r\n\r\n            <label>Saída: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"nome\"\r\n              value={this.state.model.saida}\r\n              onChange={(e) => this.setValues(e, 'saida')}\r\n            />\r\n            <br />\r\n\r\n            <label>Retorno: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"retorno\"\r\n              value={this.state.model.retorno}\r\n              onChange={(e) => this.setValues(e, 'retorno')}\r\n            />\r\n            <br />\r\n\r\n            <label>Preço: </label>\r\n            <br />\r\n            <input\r\n              class=\"input\"\r\n              type=\"preco\"\r\n              value={this.state.model.preco}\r\n              onChange={(e) => this.setValues(e, 'preco')}\r\n            />\r\n            <br />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.create}\r\n            >\r\n              Gravar\r\n            </button>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ListCliente extends Component {\r\n  delete = (id) => {\r\n    this.props.deleteCliente(id)\r\n  }\r\n\r\n  onEdit = (cliente) => {\r\n    PubSub.publish('edit-cliente', cliente)\r\n  }\r\n\r\n  render() {\r\n    const { clientes } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"text-center mb-4\">Lista de clientes</h2>\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"fl-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Destino</th>\r\n                <th>Origem</th>\r\n                <th>Saida</th>\r\n                <th>Retorno</th>\r\n                <th>Preço</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {clientes.map((cliente) => (\r\n                <tr key={cliente.id}>\r\n                  <td>{cliente.nome}</td>\r\n                  <td>{cliente.destino}</td>\r\n                  <td>{cliente.origem}</td>\r\n                  <td>{cliente.saida}</td>\r\n                  <td>{cliente.retorno}</td>\r\n                  <td>{`R$ ${cliente.preco}`}</td>\r\n                  <td className=\"pt-2\">\r\n                    <button\r\n                      className=\"btn btn-info text-white\"\r\n                      onClick={(e) => this.onEdit(cliente)}\r\n                    >\r\n                      <i className=\"bi bi-pencil-square\"></i>\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger ms-2\"\r\n                      onClick={(e) => this.delete(cliente.id)}\r\n                    >\r\n                      <i className=\"bi bi-trash3-fill\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class ProductBox extends Component {\r\n  Url = 'http://localhost:8080/cliente'\r\n\r\n  state = {\r\n    clientes: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(this.Url)\r\n      .then((response) => response.json())\r\n      .then((clientes) => this.setState({ clientes }))\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  create = (cliente) => {\r\n    let data = {\r\n      id: parseInt(cliente.id),\r\n      nome: cliente.nome,\r\n      origem: cliente.origem,\r\n      valor: parseFloat(cliente.valor),\r\n\r\n      nome: '',\r\n        origem: '',\r\n        destino: '',\r\n        saida: '',\r\n        retorno: '',\r\n        preco: 0,\r\n    }\r\n    const requestInfo = {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: new Headers({\r\n        'Content-type': 'application/json',\r\n      }),\r\n    }\r\n    if (data.valor !== 0 && data.cidade !== '' && data.pais !== '') {\r\n      fetch('http://localhost:8080/cliente/salvar', requestInfo)\r\n        .then((response) => response.json())\r\n        .then((newCliente) => console.log(newCliente))\r\n        .catch((e) => console.log(e))\r\n    } else {\r\n      alert('Favor informar todos os campos!')\r\n      return\r\n    }\r\n  }\r\n\r\n  delete = (id) => {\r\n    fetch(`http://localhost:8080/cliente/deletar/${id}`, { method: 'DELETE' })\r\n      .then((rows) => {\r\n        const clientes = this.state.clientes.filter(\r\n          (cliente) => cliente.id !== id,\r\n        )\r\n        this.setState({ clientes })\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row destinos-action-container\">\r\n        <div className=\"\">\r\n          <FormDestino destinoCreate={this.create} />\r\n        </div>\r\n        <div className=\"\">\r\n          <ListCliente\r\n            clientes={this.state.clientes}\r\n            deleteCliente={this.delete}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*class Cadastro extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            nome: '',\r\n            origem: '',\r\n            destino: '',\r\n            saida: '',\r\n            retorno: '',\r\n            preco: ''\r\n        }\r\n        this.changeNomeHandler = this.changeNomeHandler.bind(this);\r\n        this.changeOrigemHandler = this.changeOrigemHandler.bind(this);\r\n        this.changeDestinoHandler = this.changeDestinoHandler.bind(this);\r\n        this.changeSaidaHandler = this.changeSaidaHandler.bind(this);\r\n        this.changeRetornoHandler = this.changeRetornoHandler.bind(this);\r\n        this.changePrecoHandler = this.changePrecoHandler.bind(this);\r\n        this.saveOrUpdateCliente = this.saveOrUpdateCliente.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            ClienteService.getClienteById(this.state.id).then( (res) =>{\r\n                let cliente = res.data;\r\n                this.setState({\r\n                    nome: cliente.nome,\r\n                    origem: cliente.origem,\r\n                    destino: cliente.destino,\r\n                    saida: cliente.saida,\r\n                    retorno: cliente.retorno,\r\n                    preco: cliente.preco\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateCliente = (e) => {\r\n        e.preventDefault();\r\n        let cliente = {nome: this.state.nome, origem: this.state.origem, destino: this.state.destino, saida: this.state.saida, retorno: this.state.retorno, preco: this.state.preco};\r\n        console.log('cliente => ' + JSON.stringify(cliente));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            ClienteService.createCliente(cliente).then(res =>{\r\n                this.props.history.push('/clientes');\r\n            });\r\n        }else{\r\n            ClienteService.updateCliente(cliente, this.state.id).then( res => {\r\n                this.props.history.push('/clientes');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeNomeHandler= (event) => {\r\n        this.setState({nome: event.target.value});\r\n    }\r\n\r\n    changeCpfHandler= (event) => {\r\n        this.setState({cpf: event.target.value});\r\n    }\r\n\r\n    changeTelefoneHandler= (event) => {\r\n        this.setState({telefone: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/clientes');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center primary-color\">Adicionar</h3>\r\n        }else{\r\n            return <h3 className=\"text-center primary-color\">Editar</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='alturaTela'>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n\r\n                                            <label>Nome: </label><br />\r\n                                            <input class=\"input\" type=\"nome\" value={this.state.nome} onChange={this.changeNomeHandler} /><br />\r\n\r\n                                            <label>Origem: </label><br />\r\n                                            <input class=\"input\" type=\"origem\" value={this.state.origem} onChange={this.changeOrigemHandler} /><br />\r\n\r\n                                            <label>Destino: </label><br />\r\n                                            <input class=\"input texto\" type=\"destino\" value={this.state.destino} onChange={this.changeDestinoHandler} /><br />\r\n\r\n                                            <label>Saída: </label><br />\r\n                                            <input class=\"input\" type=\"saida\" value={this.state.saida} onChange={this.changeSaidaHandler} /><br />\r\n\r\n                                            <label>Retorno: </label><br />\r\n                                            <input class=\"input\" type=\"retorno\" value={this.state.retorno} onChange={this.changeRetornoHandler} /><br />\r\n\r\n                                            <label>Preço: </label><br />\r\n                                            <input class=\"input\" type=\"preco\" value={this.state.preco} onChange={this.changePrecoHandler} /><br />\r\n\r\n                                        <button className=\"btn btn-primary my-3\" onClick={this.saveOrUpdateCliente}>Salvar</button>\r\n                                        <button className=\"btn btn-danger my-3\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Voltar</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NovaPessoa*/\r\n\r\n/*\r\nexport default function Cadastro() {\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"mform\">\r\n        <h1 className=\"primary-color display-6 text-center fw-bold my-5\">Cadastro</h1>\r\n        <main class=\"main-pags\">\r\n            <form id=\"contForm\">\r\n                \r\n                    <label>Nome: </label><br />\r\n                    <input class=\"input\" type=\"nome\" /><br />\r\n\r\n                    <label>Origem: </label><br />\r\n                    <input class=\"input\" type=\"origem\" /><br />\r\n\r\n                    <label>Destino: </label><br />\r\n                    <input class=\"input texto\" type=\"destino\" /><br />\r\n\r\n                    <label>Saída: </label><br />\r\n                    <input class=\"input\" type=\"saida\" /><br />\r\n\r\n                    <label>Retorno: </label><br />\r\n                    <input class=\"input\" type=\"retorno\" /><br />\r\n\r\n                    <label>Preço: </label><br />\r\n                    <input class=\"input\" type=\"preco\" /><br />\r\n            \r\n                        <input id=\"btn-enviar\" type=\"submit\" value=\"Enviar\" />\r\n\r\n                    </form>\r\n                    </main>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}